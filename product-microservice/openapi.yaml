openapi: 3.0.3
info:
  title: AWS Courses Shop
  description: >-
    This is a sample AWS Store Server (AWS API Gateway) based on the OpenAPI 3.0 specification.

    Some useful links:

    - [The API Gateway and lambdas PR](https://github.com/maks-rafalko/nodejs-aws-shop-backend/pull/1)
  version: 1.0.0
servers:
  - url: https://3n3euo5nmh.execute-api.us-east-1.amazonaws.com/prod
tags:
  - name: Product
    description: Everything about Products
paths:
  /products:
    get:
      tags:
        - Product
      summary: Get all available products
      description: Get all available products in the Shop, with count of available items
      operationId: getProductsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableProduct'
    post:
      tags:
        - Product
      summary: Add a new product to the shop
      description: Add a new product to the shop with stock information
      operationId: createProduct
      requestBody:
          description: Product object that needs to be added to the shop
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/AvailableProduct'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProduct'
        '400':
          description: Bad Request
  /products/{productId}:
    get:
      tags:
        - Product
      summary: Get product by ID
      description: Returns a single Product
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          description: ID of a product to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProduct'
        '404':
          description: Product not found

components:
  schemas:
    AvailableProduct:
      required:
        - id
        - title
        - price
        - description
        - count
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '7567ec4b-b10c-48c5-9345-fc73c48a80aa'
        title:
          type: string
          example: AWS Course about Lambda functions
        price:
          type: number
          example: 23.33
        description:
          type: string
          example: Detailed AWS Course about Lambda functions with practice
        count:
          type: number
          format: int64
          example: 13
